- [Linux Shell编程之前言](#orge63f03b)
  - [Shell的介绍](#org82fd28b)
  - [shellscript的解释器](#org5cc2f14)


<a id="orge63f03b"></a>

# Linux Shell编程之前言

&ensp;&ensp; 在Linux下命令行终端（terminal）是一个很重要的工具。我们可以在终端下执行一条条命令得到输出结果。在命令行下，命令都分为一个个极小的子集，每个命令只专著于完成和实现一个功能 这也是Unix的设计哲学， `小即是美` 。而不想在windows上的GUI(Graphic User Interface)软件的功能全面和集中。但是这些命令，给了我们极大的定制化,和扩展空间，我们可以就像搭积木一样,来组合这些 小命令实现我们的想要功能。 `shell` 脚本就好像积木和积木之间的连接器。


<a id="org82fd28b"></a>

## Shell的介绍

&ensp;&ensp; Shell其实准确来说是一个用 `C` 语言编写的应用程序，它提供给用户一个和Unix/Linux系统交互的通道。用户甚至可以通过它来直接访问系统的内核服务。 shell编程,也叫shell脚本(shellscript)编程.


<a id="org5cc2f14"></a>

## shellscript的解释器

&ensp;&ensp; `shellscript` 是一种解释性语言，需要解释器来解释执行。 `Linux` 下的 `shellscript` 解释器有很多，常见的有

-   Bourne Shell（/usr/bin/sh或/bin/sh）
-   Bourne Again Shell（/bin/bash）
-   C Shell（/usr/bin/csh）
-   K Shell（/usr/bin/ksh）
-   Shell for Root（/sbin/sh）

&ensp;&ensp; 这些解释器都支持大部分的 `shellscript` 语法，但是不同的解释器之间支持的 `shellscript` 的语法还是存在一些差异。这些下面将会给出详细的例子。
