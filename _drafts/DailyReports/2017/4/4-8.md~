#### <div style="color:#369">今日计划</div>
+ 完成web界面的搭建
+ 有道口语一课
+ 看盲源分离和神经网络方面的知识,以及查找其他代替方法
+ 熟悉论文的结构
+ 15号将程序写出来以及论文弄好(还有9天)


#### <div style="color:#369">今日收获</div>

**Yaf框架的学习**

&ensp;&ensp;Yaf框架是利用PHP扩展使用C写的一个简单高效的MVC框架

+ Yaf项目结构

``` shell

- index.php  //入口文件
- .htaccess 
+ conf
  |- application.ini //项目配置
- application/  //程序代码
  - Bootstrap.php   
  + controllers
     - Index.php //默认控制器
  + views     // 存放MVC中的V 视图模板文件,子文件夹的名字和控制器对应
     |+ index   
        - index.phtml //view template for default action
  + modules  
  - library
  - models  // 存放MVC中的M部分，关于数据库处理的相关代码
  - plugins 

```


*入口文件*

&ensp;&ensp; Yaf框架的入口文件`index.php` 是框架的唯一入口，负责初始化框架任务。

``` php

<?php
define("APPLICATION_PATH", dirname(__FILE__));

$app = new Yaf_Application(APPLICATION_PATH . "/conf/application.ini");
$app->bootstrap() //call bootstrap methods defined in Bootstrap.php
->run();

?> 
```
+ 指定应用程序的路径，这里是`appllication`的位置

+ 读取配置文件初始化程序

+ 运行程序


*为Yaf配置第三方模板引擎Smarty*

1. 复写Yaf_View_Interface定义Smarty模板引擎适配器

2. 通过library方式与Yaf结合

3. 在Bootstrap中初始化Smarty。


> 复写Yaf_View_Interface定义Smarty模板引擎适配器

```php

<?php
require "/path/to/smarty/Smarty.class.php";

class Smarty_Adapter implements Yaf_View_Interface
{
/**
* Smarty object
* @var Smarty
*/
public $_smarty;

/**
* Constructor
*
* @param string $tmplPath
* @param array $extraParams
* @return void
*/
public function __construct($tmplPath = null, $extraParams = array()) {
$this->_smarty = new Smarty;

if (null !== $tmplPath) {
$this->setScriptPath($tmplPath);
}

foreach ($extraParams as $key => $value) {
$this->_smarty->$key = $value;
}
}

/**
* Set the path to the templates
*
* @param string $path The directory to set as the path.
* @return void
*/
public function setScriptPath($path)
{
if (is_readable($path)) {
$this->_smarty->template_dir = $path;
return;
}

throw new Exception('Invalid path provided');
}

/**
* Assign a variable to the template
*
* @param string $key The variable name.
* @param mixed $val The variable value.
* @return void
*/
public function __set($key, $val)
{
$this->_smarty->assign($key, $val);
}

/**
* Allows testing with empty() and isset() to work
*
* @param string $key
* @return boolean
*/
public function __isset($key)
{
return (null !== $this->_smarty->get_template_vars($key));
}

/**
* Allows unset() on object properties to work
*
* @param string $key
* @return void
*/
public function __unset($key)
{
$this->_smarty->clear_assign($key);
}

/**
* Assign variables to the template
*
* Allows setting a specific key to the specified value, OR passing
* an array of key => value pairs to set en masse.
*
* @see __set()
* @param string|array $spec The assignment strategy to use (key or
* array of key => value pairs)
* @param mixed $value (Optional) If assigning a named variable,
* use this as the value.
* @return void
*/
public function assign($spec, $value = null) {
if (is_array($spec)) {
$this->_smarty->assign($spec);
return;
}

$this->_smarty->assign($spec, $value);
}

/**
* Clear all assigned variables
*
* Clears all variables assigned to Yaf_View either via
* {@link assign()} or property overloading
* ({@link __get()}/{@link __set()}).
*
* @return void
*/
public function clearVars() {
$this->_smarty->clear_all_assign();
}

/**
* Processes a template and returns the output.
*
* @param string $name The template to process.
* @return string The output.
*/
public function render($name, $value = NULL) {
return $this->_smarty->fetch($name);
}

public function display($name, $value = NULL) {
echo $this->_smarty->fetch($name);
}

}
?> 

```

> 通过library方式引入smarty适配器, 和初始化smarty配置

```php

<?php
class Bootstrap extends Yaf_Bootstrap_Abstract {

/**
* there are some config for smarty in the config:
*
* smarty.left_delimiter = "{{"
* smarty.right_delimiter = "}}"
* smarty.template_dir = APPLICATION_PATH "/views/scripts/"
* smarty.compile_dir = APPLICATION_PATH "/views/templates_c/"
* smarty.cache_dir = APPLICATION_PATH "/views/templates_d/"
*
*/
public function _initConfig() {
$config = Yaf_Application::app()->getConfig();
Yaf_Registry::set("config", $config);
}

public function _initLocalName() {
/** we put class Smarty_Adapter under the local library directory */
Yaf_Loader::getInstance()->registerLocalNamespace('Smarty');
}

public function _initSmarty(Yaf_Dispatcher $dispatcher) {
$smarty = new Smarty_Adapter(null, Yaf_Registry::get("config")->get("smarty"));
$dispatcher->setView($smarty);
/* now the Smarty view engine become the default view engine of Yaf */
}
}
?> 

```





#### <div style="color:#369">todo</div>
+ 详细了解cpp中的function->return type的用法
+ 写一个管理markdown的博客vim插件(参考vim的vimwiki插件)
+ 了解C++中的异常的使用
+ 在emacs或者vim中实现一个小的智能程序
+ 写一个类似Mac中的高亮当前鼠标位置的效果(Linux下)
+ 在vim移植emacs的org-mode(针对markdown)
+ 命令行的qq聊天(vim-plugin,emacs-plugin)
+ 探究真正意义上的人工智能
+ 学习黑客的思维
+ 写个备份Gentoo Linux的脚本(Live版本,iso格式)
+ 写个像Grammerly的功能的软件
+ 写方面绑定手机的各种账号更换
+ 看王垠的40行代码
+ 学习scheme语言
+ 详细看《Chapter 13. Copy contral》
+ 详细看《 Chapter 12. Dynamic Memory》
+ 详细看《13.1.4（p. 504）》
+ 了解C++里面的lamda表达式
+ C++的线程相关操作
+ 看825页的dynamic_cast(看完虚函数再看)
+ +《 CPP prime 》 看到Circumventing the Virtual Mechanism


#### <div style="color:#369">明日计划</div>


